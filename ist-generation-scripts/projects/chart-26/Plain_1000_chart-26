* EvoSuite 1.0.6
* Configuration: EvoSuite
* Going to generate test cases for class: org.jfree.chart.axis.Axis
* Starting client
* Connecting to master process on port 14966
* Analyzing classpath: 
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-26/build
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-26/lib/slf4j-log4j12-1.7.5.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-26/lib/junit-4.11.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-26/lib/log4j-1.2.17.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-26/lib/slf4j-api-1.7.5.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-26/lib/servlet.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-26/lib/pitest-ant-1.4.3.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-26/lib/xmlpull-xpp3-1.1.4c.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-26/lib/junit.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-26/lib/itext-2.0.2.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-26/lib/hamcrest-core-1.3.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-26/lib/xstream-1.4.11.1.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-26/lib/pitest-1.4.3.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-26/lib/pitest-entry-1.4.3.jar
* Finished analyzing classpath
* Generating tests for class org.jfree.chart.axis.Axis
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 318
  - Branch 170
  - Exception 0
  - MutationFactory 410
  - Output 208
  - Method 57
  - MethodNoException 57
  - CBranchFitnessFactory 170
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1000
* Starting evolution
[Progress:>                             3%] [Cov:>                                  1%][Progress:>                             3%] [Cov:====>                              14%][Progress:=>                            4%] [Cov:>                                  1%][Progress:=>                            4%] [Cov:>                                  2%][Progress:=>                            4%] [Cov:=====>                             15%][Progress:=>                            4%] [Cov:=====>                             17%][Progress:=>                            4%] [Cov:======>                            18%][Progress:=>                            4%] [Cov:======>                            19%][Progress:=>                            4%] [Cov:=======>                           20%][Progress:=>                            5%] [Cov:>                                  1%][Progress:=>                            5%] [Cov:====>                              14%][Progress:=>                            5%] [Cov:=====>                             16%][Progress:=>                            5%] [Cov:=====>                             17%][Progress:=>                            5%] [Cov:======>                            18%][Progress:=>                            5%] [Cov:======>                            19%][Progress:=>                            6%] [Cov:>                                  1%][Progress:=>                            6%] [Cov:>                                  2%][Progress:=>                            6%] [Cov:=====>                             15%][Progress:=>                            6%] [Cov:=====>                             16%][Progress:=>                            6%] [Cov:=====>                             17%][Progress:==>                           7%] [Cov:>                                  1%][Progress:==>                           7%] [Cov:>                                  2%][Progress:==>                           7%] [Cov:=====>                             15%][Progress:==>                           7%] [Cov:=====>                             16%][Progress:==>                           7%] [Cov:=====>                             17%][Progress:==>                           9%] [Cov:=====>                             15%][Progress:==>                           9%] [Cov:=====>                             16%][Progress:==>                           9%] [Cov:=====>                             17%][Progress:==>                           9%] [Cov:=======>                           20%][Progress:===>                          10%] [Cov:=====>                             16%][Progress:===>                          10%] [Cov:======>                            18%][Progress:===>                          10%] [Cov:======>                            19%][Progress:===>                          10%] [Cov:==================>                53%][Progress:===>                          11%] [Cov:==================>                54%][Progress:===>                          11%] [Cov:==================>                54%][Progress:===>                          12%] [Cov:==================>                52%][Progress:===>                          12%] [Cov:==================>                54%][Progress:===>                          12%] [Cov:==================>                54%][Progress:===>                          12%] [Cov:==================>                54%][Progress:===>                          13%] [Cov:==================>                52%][Progress:===>                          13%] [Cov:==================>                54%][Progress:===>                          13%] [Cov:===================>               55%][Progress:===>                          13%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               55%][Progress:====>                         14%] [Cov:===================>               56%][Progress:====>                         15%] [Cov:==================>                54%][Progress:====>                         15%] [Cov:===================>               55%][Progress:====>                         15%] [Cov:===================>               56%][Progress:====>                         16%] [Cov:===================>               55%][Progress:====>                         16%] [Cov:===================>               56%][Progress:====>                         16%] [Cov:===================>               56%][Progress:=====>                        17%] [Cov:===================>               56%][Progress:=====>                        17%] [Cov:===================>               56%][Progress:=====>                        18%] [Cov:===================>               56%][Progress:=====>                        18%] [Cov:===================>               56%][Progress:=====>                        19%] [Cov:===================>               56%][Progress:=====>                        19%] [Cov:===================>               56%][Progress:======>                       20%] [Cov:===================>               56%][Progress:======>                       20%] [Cov:===================>               56%][Progress:======>                       21%] [Cov:===================>               56%][Progress:======>                       21%] [Cov:===================>               57%][Progress:======>                       22%] [Cov:===================>               57%][Progress:======>                       23%] [Cov:===================>               57%][Progress:======>                       23%] [Cov:====================>              58%][Progress:======>                       23%] [Cov:====================>              58%][Progress:=======>                      24%] [Cov:===================>               57%][Progress:=======>                      24%] [Cov:====================>              58%][Progress:=======>                      25%] [Cov:====================>              58%][Progress:=======>                      25%] [Cov:====================>              58%][Progress:=======>                      26%] [Cov:====================>              58%][Progress:=======>                      26%] [Cov:====================>              58%][Progress:========>                     27%] [Cov:====================>              58%][Progress:========>                     27%] [Cov:====================>              58%][Progress:========>                     28%] [Cov:====================>              58%][Progress:========>                     28%] [Cov:====================>              58%][Progress:========>                     28%] [Cov:====================>              59%][Progress:========>                     29%] [Cov:====================>              59%][Progress:=========>                    30%] [Cov:====================>              59%][Progress:=========>                    30%] [Cov:====================>              59%][Progress:=========>                    31%] [Cov:====================>              59%][Progress:=========>                    31%] [Cov:====================>              59%][Progress:=========>                    32%] [Cov:====================>              59%][Progress:=========>                    32%] [Cov:====================>              59%][MASTER] 11:49:46.240 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[Progress:=========>                    32%] [Cov:====================>              59%][Progress:=========>                    33%] [Cov:====================>              59%][Progress:=========>                    33%] [Cov:====================>              59%][Progress:==========>                   34%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   35%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:==========>                   36%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  37%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  38%] [Cov:=====================>             60%][Progress:===========>                  38%] [Cov:====================>              59%][Progress:===========>                  39%] [Cov:=====================>             60%][Progress:============>                 40%] [Cov:====================>              59%][Progress:============>                 40%] [Cov:=====================>             60%][Progress:============>                 40%] [Cov:=====================>             60%][Progress:============>                 41%] [Cov:=====================>             60%][Progress:============>                 41%] [Cov:=====================>             60%][Progress:============>                 42%] [Cov:=====================>             60%][Progress:============>                 42%] [Cov:=====================>             60%][Progress:============>                 43%] [Cov:=====================>             60%][Progress:============>                 43%] [Cov:=====================>             60%][Progress:============>                 43%] [Cov:=====================>             60%][Progress:============>                 43%] [Cov:=====================>             61%][Progress:=============>                44%] [Cov:=====================>             60%][Progress:=============>                45%] [Cov:=====================>             61%][Progress:=============>                45%] [Cov:=====================>             61%][Progress:=============>                46%] [Cov:=====================>             60%][Progress:=============>                46%] [Cov:=====================>             61%][Progress:=============>                46%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             60%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               47%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             60%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               48%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:==============>               49%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              50%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             61%][Progress:===============>              53%] [Cov:=====================>             62%][Progress:================>             54%] [Cov:=====================>             61%][Progress:================>             55%] [Cov:=====================>             62%][Progress:================>             55%] [Cov:=====================>             62%][Progress:================>             56%] [Cov:=====================>             62%][Progress:================>             56%] [Cov:=====================>             62%][Progress:================>             56%] [Cov:=====================>             62%][Progress:=================>            57%] [Cov:=====================>             62%][Progress:=================>            57%] [Cov:=====================>             62%][Progress:=================>            58%] [Cov:=====================>             62%][Progress:=================>            58%] [Cov:=====================>             62%][Progress:=================>            59%] [Cov:=====================>             62%][Progress:==================>           60%] [Cov:=====================>             62%][Progress:==================>           60%] [Cov:=====================>             62%][Progress:==================>           60%] [Cov:=====================>             62%][Progress:==================>           61%] [Cov:=====================>             62%][Progress:==================>           61%] [Cov:=====================>             62%][Progress:==================>           62%] [Cov:=====================>             62%][Progress:==================>           62%] [Cov:======================>            63%][Progress:==================>           62%] [Cov:======================>            63%][Progress:==================>           63%] [Cov:=====================>             62%][Progress:==================>           63%] [Cov:======================>            63%][Progress:==================>           63%] [Cov:======================>            63%][Progress:===================>          64%] [Cov:======================>            63%][Progress:===================>          65%] [Cov:=====================>             62%][Progress:===================>          65%] [Cov:======================>            63%][Progress:===================>          65%] [Cov:======================>            63%][Progress:===================>          66%] [Cov:======================>            63%][Progress:===================>          66%] [Cov:======================>            63%][Progress:====================>         67%] [Cov:======================>            63%][Progress:====================>         68%] [Cov:======================>            63%][Progress:====================>         68%] [Cov:======================>            63%][Progress:====================>         69%] [Cov:======================>            63%][Progress:=====================>        70%] [Cov:======================>            64%][Progress:=====================>        71%] [Cov:======================>            64%][Progress:=====================>        71%] [Cov:======================>            64%][Progress:=====================>        72%] [Cov:======================>            63%][Progress:=====================>        72%] [Cov:======================>            64%][Progress:=====================>        72%] [Cov:======================>            64%][Progress:=====================>        73%] [Cov:======================>            64%][Progress:=====================>        73%] [Cov:======================>            64%][Progress:======================>       74%] [Cov:======================>            64%][Progress:======================>       75%] [Cov:======================>            64%][Progress:======================>       75%] [Cov:======================>            64%][Progress:======================>       76%] [Cov:======================>            63%][Progress:======================>       76%] [Cov:======================>            64%][Progress:======================>       76%] [Cov:======================>            64%][Progress:=======================>      77%] [Cov:======================>            64%][Progress:=======================>      77%] [Cov:======================>            64%][Progress:=======================>      78%] [Cov:======================>            64%][Progress:=======================>      78%] [Cov:======================>            64%][Progress:=======================>      79%] [Cov:======================>            64%][Progress:=======================>      79%] [Cov:======================>            64%][Progress:========================>     80%] [Cov:======================>            64%][Progress:========================>     80%] [Cov:======================>            64%][Progress:========================>     80%] [Cov:======================>            64%][Progress:========================>     81%] [Cov:======================>            64%][Progress:========================>     81%] [Cov:======================>            64%][Progress:========================>     82%] [Cov:======================>            64%][Progress:========================>     82%] [Cov:======================>            64%][Progress:========================>     83%] [Cov:======================>            64%][Progress:========================>     83%] [Cov:======================>            64%][Progress:=========================>    84%] [Cov:======================>            64%][Progress:=========================>    85%] [Cov:======================>            64%][Progress:=========================>    86%] [Cov:======================>            64%][Progress:==========================>   87%] [Cov:======================>            64%][Progress:==========================>   87%] [Cov:======================>            64%][Progress:==========================>   87%] [Cov:======================>            64%][Progress:==========================>   88%] [Cov:======================>            64%][Progress:==========================>   88%] [Cov:======================>            64%][Progress:==========================>   89%] [Cov:======================>            64%][Progress:===========================>  90%] [Cov:======================>            64%][Progress:===========================>  90%] [Cov:======================>            64%][Progress:===========================>  91%] [Cov:======================>            64%][Progress:===========================>  91%] [Cov:======================>            64%][Progress:===========================>  92%] [Cov:======================>            64%][Progress:===========================>  92%] [Cov:======================>            64%][Progress:===========================>  92%] [Cov:======================>            64%][Progress:===========================>  93%] [Cov:======================>            64%][Progress:===========================>  93%] [Cov:======================>            64%][MASTER] 11:51:36.869 [logback-1] WARN  TestUsageChecker - class org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1 looks like an anonymous class, ignoring it (although reflection says false) MinMaxCategoryRenderer$1
[Progress:============================> 94%] [Cov:======================>            64%][Progress:============================> 94%] [Cov:======================>            64%][Progress:============================> 95%] [Cov:======================>            64%][Progress:============================> 95%] [Cov:======================>            64%][Progress:============================> 95%] [Cov:======================>            65%][Progress:============================> 96%] [Cov:======================>            64%][Progress:============================> 96%] [Cov:======================>            65%][Progress:=============================>97%] [Cov:======================>            64%][Progress:=============================>97%] [Cov:======================>            65%][Progress:=============================>97%] [Cov:======================>            65%][Progress:=============================>98%] [Cov:======================>            65%][Progress:=============================>98%] [Cov:======================>            65%][Progress:=============================>99%] [Cov:======================>            65%][Progress:==============================100%] [Cov:======================>            65%][Progress:==============================100%] [Cov:======================>            65%][Progress:==============================100%] [Cov:=======================>           67%]
* Search finished after 184s and 105 generations, 65164 statements, best individual has fitness: 555.7699037613389
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 60%
* Total number of goals: 318
* Number of covered goals: 192
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 65%
* Total number of goals: 170
* Number of covered goals: 110
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 8
* Number of covered goals: 8
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 66%
* Total number of goals: 410
* Number of covered goals: 269
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 25%
* Total number of goals: 208
* Number of covered goals: 51
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 91%
* Total number of goals: 57
* Number of covered goals: 52
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 89%
* Total number of goals: 57
* Number of covered goals: 51
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 47%
* Total number of goals: 170
* Number of covered goals: 80
* Generated 80 tests with total length 227
* Resulting test suite's coverage: 68% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 36%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.io.FilePermission: 
         write /tmp/+~JT4328397901952503086.tmp: 1
  - java.lang.RuntimePermission: 
         queuePrintJob: 18
         writeFileDescriptor: 9
* Writing JUnit test case 'Axis_ESTest' to /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/evosuite/tests/s1000/chart-26/evosuite-tests
* Done!

* Computation finished
