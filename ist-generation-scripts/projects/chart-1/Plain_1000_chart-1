* EvoSuite 1.0.6
* Configuration: EvoSuite
* Going to generate test cases for class: org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
* Starting client
* Connecting to master process on port 14966
* Analyzing classpath: 
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-1/build
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-1/lib/slf4j-log4j12-1.7.5.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-1/lib/junit-4.11.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-1/lib/log4j-1.2.17.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-1/lib/slf4j-api-1.7.5.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-1/lib/servlet.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-1/lib/pitest-ant-1.4.3.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-1/lib/iText-2.1.4.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-1/lib/xmlpull-xpp3-1.1.4c.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-1/lib/junit.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-1/lib/hamcrest-core-1.3.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-1/lib/xstream-1.4.11.1.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-1/lib/pitest-1.4.3.jar
  - /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/projects/chart-1/lib/pitest-entry-1.4.3.jar
* Finished analyzing classpath
* Generating tests for class org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 519
  - Branch 274
  - Exception 0
  - MutationFactory 783
  - Output 340
  - Method 65
  - MethodNoException 65
  - CBranchFitnessFactory 274
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1000
* Starting evolution
[Progress:===>                          11%] [Cov:>                                  0%][Progress:===>                          11%] [Cov:>                                  1%][Progress:===>                          11%] [Cov:====>                              13%][Progress:===>                          11%] [Cov:====>                              14%][MASTER] 11:23:40.445 [logback-1] WARN  TestUsageChecker - class org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1 looks like an anonymous class, ignoring it (although reflection says false) MinMaxCategoryRenderer$1
[Progress:===>                          11%] [Cov:=====>                             15%][Progress:===>                          12%] [Cov:>                                  0%][Progress:===>                          12%] [Cov:>                                  1%][Progress:===>                          12%] [Cov:====>                              13%][Progress:===>                          12%] [Cov:====>                              14%][MASTER] 11:23:40.761 [logback-1] WARN  TestUsageChecker - class org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2 looks like an anonymous class, ignoring it (although reflection says false) MinMaxCategoryRenderer$2
[Progress:===>                          12%] [Cov:=====>                             15%][Progress:===>                          12%] [Cov:=====>                             16%][Progress:===>                          12%] [Cov:=====>                             17%][Progress:===>                          12%] [Cov:======>                            18%][Progress:===>                          13%] [Cov:====>                              13%][Progress:===>                          13%] [Cov:====>                              14%][Progress:====>                         14%] [Cov:>                                  0%][Progress:====>                         14%] [Cov:====>                              12%][Progress:====>                         14%] [Cov:====>                              13%][Progress:====>                         14%] [Cov:====>                              14%][Progress:====>                         14%] [Cov:=====>                             15%][Progress:====>                         15%] [Cov:>                                  1%][Progress:====>                         15%] [Cov:====>                              14%][Progress:====>                         15%] [Cov:=====>                             15%][MASTER] 11:23:45.823 [logback-2] ERROR TestCluster - Failed to check cache for javax.swing.RowSorter<M> : Type points to itself
[Progress:====>                         15%] [Cov:=====>                             16%][Progress:====>                         15%] [Cov:=====>                             17%][Progress:====>                         15%] [Cov:=====>                             17%][Progress:====>                         16%] [Cov:====>                              14%][Progress:====>                         16%] [Cov:=====>                             16%][Progress:====>                         16%] [Cov:=====>                             17%][Progress:====>                         16%] [Cov:======>                            18%][Progress:====>                         16%] [Cov:======>                            19%][Progress:====>                         16%] [Cov:==============>                    42%][Progress:=====>                        17%] [Cov:==============>                    41%][Progress:=====>                        17%] [Cov:==============>                    42%][Progress:=====>                        17%] [Cov:==============>                    42%][Progress:=====>                        18%] [Cov:==============>                    41%][Progress:=====>                        18%] [Cov:==============>                    42%][Progress:=====>                        18%] [Cov:==============>                    42%][Progress:=====>                        19%] [Cov:==============>                    42%][Progress:=====>                        19%] [Cov:==============>                    42%][Progress:======>                       20%] [Cov:==============>                    42%][Progress:======>                       21%] [Cov:==============>                    42%][Progress:======>                       21%] [Cov:==============>                    42%][Progress:======>                       21%] [Cov:==============>                    42%][Progress:======>                       22%] [Cov:==============>                    42%][Progress:======>                       22%] [Cov:===============>                   43%][Progress:======>                       22%] [Cov:===============>                   43%][Progress:======>                       23%] [Cov:==============>                    42%][Progress:======>                       23%] [Cov:===============>                   43%][Progress:======>                       23%] [Cov:===============>                   43%][Progress:=======>                      24%] [Cov:===============>                   43%][Progress:=======>                      24%] [Cov:===============>                   43%][Progress:=======>                      25%] [Cov:===============>                   43%][Progress:=======>                      25%] [Cov:===============>                   43%][Progress:=======>                      26%] [Cov:===============>                   43%][Progress:========>                     27%] [Cov:===============>                   43%][Progress:========>                     28%] [Cov:===============>                   43%][Progress:========>                     29%] [Cov:===============>                   43%][Progress:=========>                    30%] [Cov:===============>                   43%][Progress:=========>                    30%] [Cov:===============>                   43%][Progress:=========>                    30%] [Cov:===============>                   44%][Progress:=========>                    31%] [Cov:===============>                   43%][Progress:=========>                    31%] [Cov:===============>                   44%][Progress:=========>                    32%] [Cov:===============>                   44%][Progress:=========>                    32%] [Cov:===============>                   44%][Progress:=========>                    33%] [Cov:===============>                   44%][Progress:==========>                   34%] [Cov:===============>                   44%][Progress:==========>                   35%] [Cov:===============>                   44%][Progress:==========>                   35%] [Cov:===============>                   44%][Progress:==========>                   36%] [Cov:===============>                   44%][Progress:===========>                  37%] [Cov:===============>                   44%][Progress:===========>                  38%] [Cov:===============>                   44%][Progress:===========>                  38%] [Cov:===============>                   45%][Progress:===========>                  39%] [Cov:===============>                   44%][Progress:============>                 40%] [Cov:===============>                   45%][Progress:============>                 41%] [Cov:===============>                   45%][Progress:============>                 41%] [Cov:===============>                   45%][Progress:============>                 42%] [Cov:===============>                   45%][Progress:============>                 43%] [Cov:===============>                   45%][Progress:============>                 43%] [Cov:===============>                   45%][Progress:=============>                44%] [Cov:===============>                   45%][Progress:=============>                45%] [Cov:===============>                   45%][Progress:=============>                46%] [Cov:===============>                   45%][Progress:=============>                46%] [Cov:===============>                   45%][Progress:==============>               47%] [Cov:===============>                   45%][Progress:==============>               48%] [Cov:===============>                   45%][Progress:==============>               48%] [Cov:===============>                   45%][Progress:==============>               48%] [Cov:================>                  46%][Progress:===============>              52%] [Cov:===============>                   45%][Progress:===============>              53%] [Cov:================>                  46%][Progress:================>             54%] [Cov:================>                  46%][Progress:================>             55%] [Cov:================>                  46%][Progress:================>             55%] [Cov:================>                  46%][Progress:================>             56%] [Cov:================>                  46%][Progress:=================>            57%] [Cov:================>                  46%][Progress:=================>            58%] [Cov:================>                  46%][Progress:=================>            58%] [Cov:================>                  46%][Progress:=================>            59%] [Cov:================>                  46%][Progress:==================>           60%] [Cov:================>                  46%][Progress:==================>           61%] [Cov:================>                  46%][Progress:==================>           62%] [Cov:================>                  46%][Progress:==================>           62%] [Cov:================>                  46%][Progress:==================>           63%] [Cov:================>                  46%][Progress:==================>           63%] [Cov:================>                  47%][Progress:===================>          64%] [Cov:================>                  47%][Progress:===================>          65%] [Cov:================>                  47%][Progress:===================>          65%] [Cov:================>                  48%][Progress:===================>          66%] [Cov:================>                  48%][Progress:====================>         67%] [Cov:================>                  48%][Progress:====================>         67%] [Cov:================>                  48%][Progress:====================>         68%] [Cov:================>                  48%][Progress:====================>         69%] [Cov:================>                  48%][Progress:=====================>        70%] [Cov:================>                  48%][Progress:=====================>        70%] [Cov:================>                  48%][Progress:=====================>        71%] [Cov:================>                  48%][Progress:=====================>        71%] [Cov:================>                  48%][Progress:=====================>        72%] [Cov:================>                  48%][Progress:=====================>        73%] [Cov:================>                  48%][Progress:======================>       74%] [Cov:================>                  48%][Progress:======================>       75%] [Cov:================>                  48%][Progress:======================>       76%] [Cov:================>                  48%][Progress:=======================>      77%] [Cov:================>                  48%][Progress:=======================>      77%] [Cov:=================>                 49%][Progress:=======================>      78%] [Cov:================>                  48%][Progress:=======================>      78%] [Cov:=================>                 49%][Progress:=======================>      79%] [Cov:================>                  48%][Progress:=======================>      79%] [Cov:=================>                 49%][Progress:========================>     80%] [Cov:================>                  48%][Progress:========================>     81%] [Cov:=================>                 49%][Progress:========================>     82%] [Cov:================>                  48%][Progress:========================>     82%] [Cov:=================>                 49%][Progress:========================>     83%] [Cov:=================>                 49%][Progress:=========================>    84%] [Cov:=================>                 49%][Progress:=========================>    84%] [Cov:=================>                 49%][Progress:=========================>    85%] [Cov:=================>                 49%][Progress:=========================>    85%] [Cov:=================>                 49%][Progress:=========================>    86%] [Cov:=================>                 49%][Progress:==========================>   87%] [Cov:=================>                 49%][Progress:==========================>   88%] [Cov:=================>                 49%][Progress:==========================>   88%] [Cov:=================>                 49%][Progress:==========================>   89%] [Cov:=================>                 49%][Progress:==========================>   89%] [Cov:=================>                 49%][Progress:===========================>  90%] [Cov:=================>                 49%][Progress:===========================>  91%] [Cov:=================>                 49%][Progress:===========================>  92%] [Cov:=================>                 49%][Progress:===========================>  93%] [Cov:=================>                 49%][Progress:============================> 94%] [Cov:=================>                 49%][Progress:============================> 95%] [Cov:=================>                 49%][Progress:============================> 95%] [Cov:=================>                 49%][Progress:============================> 96%] [Cov:=================>                 49%][Progress:============================> 96%] [Cov:=================>                 49%][Progress:=============================>97%] [Cov:=================>                 49%][Progress:=============================>98%] [Cov:=================>                 49%][Progress:=============================>98%] [Cov:=================>                 50%][Progress:=============================>99%] [Cov:=================>                 49%][Progress:==============================100%] [Cov:=================>                 50%][Progress:==============================100%] [Cov:==================>                53%]
* Search finished after 183s and 57 generations, 36553 statements, best individual has fitness: 1627.0402833726907
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 40%
* Total number of goals: 519
* Number of covered goals: 207
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 37%
* Total number of goals: 274
* Number of covered goals: 101
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 22
* Number of covered goals: 22
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 30%
* Total number of goals: 783
* Number of covered goals: 235
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 20%
* Total number of goals: 340
* Number of covered goals: 69
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 89%
* Total number of goals: 65
* Number of covered goals: 58
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 77%
* Total number of goals: 65
* Number of covered goals: 50
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 34%
* Total number of goals: 274
* Number of covered goals: 93
* Generated 82 tests with total length 284
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 8%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         queuePrintJob: 22
         writeFileDescriptor: 8
* Writing JUnit test case 'AbstractCategoryItemRenderer_ESTest' to /home/ubuntu/Scrivania/ubuntu/IdeaProjects/smells-automated/ist-generation-scripts/evosuite/tests/s1000/chart-1/evosuite-tests
* Done!

* Computation finished
* EvoSuite 1.0.6
* Configuration: EvoSuite
* Going to generate test cases for class: org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
* Starting client
* Connecting to master process on port 14953
* Analyzing classpath: 
  - /home/ubuntu/Scrivania/dom/smells-automated/ist-generation-scripts/projects/chart-1/build
  - /home/ubuntu/Scrivania/dom/smells-automated/ist-generation-scripts/projects/chart-1/lib/slf4j-log4j12-1.7.5.jar
  - /home/ubuntu/Scrivania/dom/smells-automated/ist-generation-scripts/projects/chart-1/lib/junit-4.11.jar
  - /home/ubuntu/Scrivania/dom/smells-automated/ist-generation-scripts/projects/chart-1/lib/log4j-1.2.17.jar
  - /home/ubuntu/Scrivania/dom/smells-automated/ist-generation-scripts/projects/chart-1/lib/slf4j-api-1.7.5.jar
  - /home/ubuntu/Scrivania/dom/smells-automated/ist-generation-scripts/projects/chart-1/lib/servlet.jar
  - /home/ubuntu/Scrivania/dom/smells-automated/ist-generation-scripts/projects/chart-1/lib/pitest-ant-1.4.3.jar
  - /home/ubuntu/Scrivania/dom/smells-automated/ist-generation-scripts/projects/chart-1/lib/iText-2.1.4.jar
  - /home/ubuntu/Scrivania/dom/smells-automated/ist-generation-scripts/projects/chart-1/lib/xmlpull-xpp3-1.1.4c.jar
  - /home/ubuntu/Scrivania/dom/smells-automated/ist-generation-scripts/projects/chart-1/lib/junit.jar
  - /home/ubuntu/Scrivania/dom/smells-automated/ist-generation-scripts/projects/chart-1/lib/hamcrest-core-1.3.jar
  - /home/ubuntu/Scrivania/dom/smells-automated/ist-generation-scripts/projects/chart-1/lib/xstream-1.4.11.1.jar
  - /home/ubuntu/Scrivania/dom/smells-automated/ist-generation-scripts/projects/chart-1/lib/pitest-1.4.3.jar
  - /home/ubuntu/Scrivania/dom/smells-automated/ist-generation-scripts/projects/chart-1/lib/pitest-entry-1.4.3.jar
* Finished analyzing classpath
* Generating tests for class org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 
  - Line 519
  - Branch 274
  - Exception 0
  - MutationFactory 783
  - Output 340
  - Method 65
  - MethodNoException 65
[Progress:>                             0%] [Cov:>                                  0%]  - CBranchFitnessFactory 274
* Using seed 1000
* Starting evolution
[Progress:======>                       21%] [Cov:>                                  0%][Progress:======>                       21%] [Cov:>                                  1%][Progress:======>                       21%] [Cov:====>                              13%][Progress:======>                       21%] [Cov:====>                              14%][Progress:======>                       22%] [Cov:====>                              12%][Progress:======>                       22%] [Cov:====>                              13%][Progress:======>                       22%] [Cov:====>                              14%][MASTER] 17:05:44.478 [logback-1] WARN  TestUsageChecker - class org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1 looks like an anonymous class, ignoring it (although reflection says false) MinMaxCategoryRenderer$1
[Progress:======>                       22%] [Cov:=====>                             15%][MASTER] 17:05:45.188 [logback-1] WARN  TestUsageChecker - class org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2 looks like an anonymous class, ignoring it (although reflection says false) MinMaxCategoryRenderer$2
[Progress:======>                       23%] [Cov:>                                  0%][Progress:======>                       23%] [Cov:====>                              13%][Progress:======>                       23%] [Cov:====>                              14%][Progress:======>                       23%] [Cov:=====>                             15%][Progress:======>                       23%] [Cov:=====>                             16%][Progress:=======>                      24%] [Cov:>                                  1%][Progress:=======>                      24%] [Cov:>                                  2%][Progress:=======>                      24%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:====>                              14%][Progress:=======>                      25%] [Cov:=====>                             16%][Progress:=======>                      25%] [Cov:=====>                             17%][Progress:=======>                      25%] [Cov:======>                            18%][Progress:=======>                      26%] [Cov:====>                              13%][Progress:=======>                      26%] [Cov:====>                              14%][Progress:========>                     27%] [Cov:>                                  0%][Progress:========>                     27%] [Cov:====>                              12%][Progress:========>                     27%] [Cov:====>                              13%][Progress:========>                     27%] [Cov:====>                              14%][Progress:========>                     27%] [Cov:=====>                             15%][MASTER] 17:05:54.333 [logback-2] ERROR TestCluster - Failed to check cache for javax.swing.RowSorter<M> : Type points to itself
[Progress:========>                     28%] [Cov:>                                  0%][Progress:========>                     28%] [Cov:>                                  1%][Progress:========>                     28%] [Cov:====>                              13%][Progress:========>                     28%] [Cov:====>                              14%][Progress:========>                     28%] [Cov:=====>                             15%][Progress:========>                     28%] [Cov:=====>                             16%][Progress:========>                     28%] [Cov:=====>                             17%][Progress:========>                     28%] [Cov:=====>                             17%][Progress:========>                     29%] [Cov:======>                            18%][Progress:=========>                    30%] [Cov:=====>                             15%][Progress:=========>                    30%] [Cov:=====>                             17%][Progress:=========>                    30%] [Cov:======>                            18%][Progress:=========>                    31%] [Cov:==============>                    41%][Progress:=========>                    31%] [Cov:==============>                    42%][Progress:=========>                    32%] [Cov:==============>                    41%][Progress:=========>                    33%] [Cov:==============>                    42%][Progress:==========>                   34%] [Cov:==============>                    42%][Progress:==========>                   35%] [Cov:==============>                    41%][Progress:==========>                   35%] [Cov:==============>                    42%][Progress:==========>                   36%] [Cov:==============>                    42%][Progress:===========>                  37%] [Cov:==============>                    42%][Progress:===========>                  38%] [Cov:==============>                    42%][Progress:===========>                  39%] [Cov:==============>                    42%][Progress:===========>                  39%] [Cov:===============>                   43%][Progress:============>                 40%] [Cov:==============>                    42%][Progress:============>                 41%] [Cov:==============>                    42%][Progress:============>                 41%] [Cov:===============>                   43%][Progress:============>                 42%] [Cov:==============>                    42%][Progress:============>                 42%] [Cov:===============>                   43%][Progress:============>                 43%] [Cov:==============>                    42%][Progress:============>                 43%] [Cov:===============>                   43%][Progress:=============>                45%] [Cov:===============>                   43%][Progress:=============>                46%] [Cov:===============>                   43%][Progress:==============>               47%] [Cov:===============>                   43%][Progress:==============>               48%] [Cov:===============>                   43%][Progress:==============>               49%] [Cov:==============>                    42%][Progress:==============>               49%] [Cov:===============>                   43%][Progress:===============>              50%] [Cov:===============>                   43%][Progress:===============>              51%] [Cov:===============>                   43%][Progress:===============>              51%] [Cov:===============>                   43%][Progress:===============>              52%] [Cov:===============>                   43%][Progress:===============>              52%] [Cov:===============>                   43%][Progress:===============>              53%] [Cov:===============>                   43%][Progress:================>             54%] [Cov:===============>                   43%][Progress:================>             55%] [Cov:===============>                   43%][Progress:================>             56%] [Cov:===============>                   43%][Progress:================>             56%] [Cov:===============>                   43%][Progress:=================>            57%] [Cov:===============>                   43%][Progress:=================>            58%] [Cov:===============>                   43%][Progress:=================>            58%] [Cov:===============>                   43%][Progress:=================>            59%] [Cov:===============>                   43%][Progress:==================>           60%] [Cov:===============>                   43%][Progress:==================>           60%] [Cov:===============>                   43%][Progress:==================>           61%] [Cov:===============>                   43%][Progress:==================>           61%] [Cov:===============>                   43%][Progress:==================>           62%] [Cov:===============>                   43%][Progress:==================>           62%] [Cov:===============>                   43%][Progress:==================>           63%] [Cov:===============>                   43%][Progress:===================>          64%] [Cov:===============>                   43%][Progress:===================>          65%] [Cov:===============>                   43%][Progress:===================>          66%] [Cov:===============>                   44%][Progress:====================>         67%] [Cov:===============>                   43%][Progress:====================>         67%] [Cov:===============>                   44%][Progress:====================>         68%] [Cov:===============>                   44%][Progress:====================>         69%] [Cov:===============>                   44%][Progress:=====================>        70%] [Cov:===============>                   44%][Progress:=====================>        71%] [Cov:===============>                   44%][Progress:=====================>        72%] [Cov:===============>                   44%][Progress:=====================>        72%] [Cov:===============>                   44%][Progress:=====================>        73%] [Cov:===============>                   44%][Progress:======================>       75%] [Cov:===============>                   44%][Progress:======================>       76%] [Cov:===============>                   44%][Progress:=======================>      77%] [Cov:===============>                   44%][Progress:=======================>      78%] [Cov:===============>                   44%][Progress:=======================>      79%] [Cov:===============>                   44%][Progress:========================>     80%] [Cov:===============>                   44%][Progress:========================>     81%] [Cov:===============>                   44%][Progress:========================>     82%] [Cov:===============>                   44%][Progress:========================>     83%] [Cov:===============>                   44%][Progress:========================>     83%] [Cov:===============>                   44%][Progress:=========================>    84%] [Cov:===============>                   44%][Progress:=========================>    85%] [Cov:===============>                   44%][Progress:=========================>    86%] [Cov:===============>                   45%][Progress:==========================>   87%] [Cov:===============>                   44%][Progress:==========================>   87%] [Cov:===============>                   45%][Progress:==========================>   87%] [Cov:===============>                   45%][Progress:==========================>   88%] [Cov:===============>                   45%][Progress:==========================>   89%] [Cov:===============>                   45%][Progress:===========================>  90%] [Cov:===============>                   45%][Progress:===========================>  91%] [Cov:===============>                   45%][Progress:===========================>  91%] [Cov:===============>                   45%][Progress:===========================>  92%] [Cov:===============>                   45%][Progress:===========================>  92%] [Cov:===============>                   45%][Progress:===========================>  93%] [Cov:===============>                   45%][Progress:===========================>  93%] [Cov:===============>                   45%][Progress:============================> 94%] [Cov:===============>                   45%][Progress:============================> 95%] [Cov:===============>                   45%][Progress:============================> 95%] [Cov:===============>                   45%][Progress:============================> 96%] [Cov:===============>                   45%][Progress:============================> 96%] [Cov:===============>                   45%][Progress:=============================>97%] [Cov:===============>                   45%][Progress:=============================>98%] [Cov:===============>                   45%][Progress:=============================>98%] [Cov:===============>                   45%][Progress:=============================>99%] [Cov:===============>                   45%][Progress:==============================100%] [Cov:===============>                   45%][Progress:==============================100%] [Cov:===============>                   45%][Progress:==============================100%] [Cov:=================>                 49%]
* Search finished after 183s and 39 generations, 26926 statements, best individual has fitness: 1757.0594696969697
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 37%
* Total number of goals: 519
* Number of covered goals: 190
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 32%
* Total number of goals: 274
* Number of covered goals: 88
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 29%
* Total number of goals: 783
* Number of covered goals: 224
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 9%
* Total number of goals: 340
* Number of covered goals: 29
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 83%
* Total number of goals: 65
* Number of covered goals: 54
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 74%
* Total number of goals: 65
* Number of covered goals: 48
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 30%
* Total number of goals: 274
* Number of covered goals: 82
* Generated 73 tests with total length 226
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 6%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.net.URLPermission: 
         *:* http://www.someFakeButWellFormedURL.org/fooExample: 1
  - java.lang.RuntimePermission: 
         queuePrintJob: 26
         writeFileDescriptor: 7
* Writing JUnit test case 'AbstractCategoryItemRenderer_ESTest' to /home/ubuntu/Scrivania/dom/smells-automated/ist-generation-scripts/evosuite/tests/s1000/chart-1/evosuite-tests
* Done!

* Computation finished
